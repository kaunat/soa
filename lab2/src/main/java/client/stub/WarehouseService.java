package client.stub;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.5.1
 * 2013-10-28T15:21:45.511+01:00
 * Generated source version: 2.5.1
 * 
 */
@WebService(targetNamespace = "http://services/", name = "WarehouseService")
@XmlSeeAlso({ObjectFactory.class})
public interface WarehouseService {

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "addOrder", targetNamespace = "http://services/", className = "client.stub.AddOrder")
    @WebMethod
    @ResponseWrapper(localName = "addOrderResponse", targetNamespace = "http://services/", className = "client.stub.AddOrderResponse")
    public java.lang.String addOrder(
        @WebParam(name = "order", targetNamespace = "")
        client.stub.Order order
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getAllNearlyOutOfStockGoods", targetNamespace = "http://services/", className = "client.stub.GetAllNearlyOutOfStockGoods")
    @WebMethod
    @ResponseWrapper(localName = "getAllNearlyOutOfStockGoodsResponse", targetNamespace = "http://services/", className = "client.stub.GetAllNearlyOutOfStockGoodsResponse")
    public java.lang.String getAllNearlyOutOfStockGoods();

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "printListedWarehouseSchedule", targetNamespace = "http://services/", className = "client.stub.PrintListedWarehouseSchedule")
    @WebMethod
    @ResponseWrapper(localName = "printListedWarehouseScheduleResponse", targetNamespace = "http://services/", className = "client.stub.PrintListedWarehouseScheduleResponse")
    public java.lang.String printListedWarehouseSchedule(
        @WebParam(name = "warehouseList", targetNamespace = "")
        java.util.List<client.stub.Warehouse> warehouseList
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getGoodsLocation", targetNamespace = "http://services/", className = "client.stub.GetGoodsLocation")
    @WebMethod
    @ResponseWrapper(localName = "getGoodsLocationResponse", targetNamespace = "http://services/", className = "client.stub.GetGoodsLocationResponse")
    public java.util.List<client.stub.Warehouse> getGoodsLocation(
        @WebParam(name = "goodsReference", targetNamespace = "")
        java.lang.String goodsReference
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "printSpecificWarehouseSchedule", targetNamespace = "http://services/", className = "client.stub.PrintSpecificWarehouseSchedule")
    @WebMethod
    @ResponseWrapper(localName = "printSpecificWarehouseScheduleResponse", targetNamespace = "http://services/", className = "client.stub.PrintSpecificWarehouseScheduleResponse")
    public java.lang.String printSpecificWarehouseSchedule(
        @WebParam(name = "warehouse", targetNamespace = "")
        client.stub.Warehouse warehouse
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getGoodsQuantity", targetNamespace = "http://services/", className = "client.stub.GetGoodsQuantity")
    @WebMethod
    @ResponseWrapper(localName = "getGoodsQuantityResponse", targetNamespace = "http://services/", className = "client.stub.GetGoodsQuantityResponse")
    public int getGoodsQuantity(
        @WebParam(name = "goodsReference", targetNamespace = "")
        java.lang.String goodsReference
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getSpecificWarehouseGoodsQuantity", targetNamespace = "http://services/", className = "client.stub.GetSpecificWarehouseGoodsQuantity")
    @WebMethod
    @ResponseWrapper(localName = "getSpecificWarehouseGoodsQuantityResponse", targetNamespace = "http://services/", className = "client.stub.GetSpecificWarehouseGoodsQuantityResponse")
    public int getSpecificWarehouseGoodsQuantity(
        @WebParam(name = "goodsReference", targetNamespace = "")
        java.lang.String goodsReference,
        @WebParam(name = "warehouse", targetNamespace = "")
        client.stub.Warehouse warehouse
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getSpecificWarehouseNearlyOutOfStockGoods", targetNamespace = "http://services/", className = "client.stub.GetSpecificWarehouseNearlyOutOfStockGoods")
    @WebMethod
    @ResponseWrapper(localName = "getSpecificWarehouseNearlyOutOfStockGoodsResponse", targetNamespace = "http://services/", className = "client.stub.GetSpecificWarehouseNearlyOutOfStockGoodsResponse")
    public java.lang.String getSpecificWarehouseNearlyOutOfStockGoods(
        @WebParam(name = "warehouse", targetNamespace = "")
        client.stub.Warehouse warehouse
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "printGeneralSchedule", targetNamespace = "http://services/", className = "client.stub.PrintGeneralSchedule")
    @WebMethod
    @ResponseWrapper(localName = "printGeneralScheduleResponse", targetNamespace = "http://services/", className = "client.stub.PrintGeneralScheduleResponse")
    public java.lang.String printGeneralSchedule();

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "addDeliverie", targetNamespace = "http://services/", className = "client.stub.AddDeliverie")
    @WebMethod
    @ResponseWrapper(localName = "addDeliverieResponse", targetNamespace = "http://services/", className = "client.stub.AddDeliverieResponse")
    public java.lang.String addDeliverie(
        @WebParam(name = "deliverie", targetNamespace = "")
        client.stub.Deliverie deliverie
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "addGoods", targetNamespace = "http://services/", className = "client.stub.AddGoods")
    @WebMethod
    @ResponseWrapper(localName = "addGoodsResponse", targetNamespace = "http://services/", className = "client.stub.AddGoodsResponse")
    public java.lang.String addGoods(
        @WebParam(name = "addedGoodsList", targetNamespace = "")
        java.util.List<client.stub.Goods> addedGoodsList,
        @WebParam(name = "providedWarehouse", targetNamespace = "")
        client.stub.Warehouse providedWarehouse
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "removeGoods", targetNamespace = "http://services/", className = "client.stub.RemoveGoods")
    @WebMethod
    @ResponseWrapper(localName = "removeGoodsResponse", targetNamespace = "http://services/", className = "client.stub.RemoveGoodsResponse")
    public java.lang.String removeGoods(
        @WebParam(name = "removedGoodsList", targetNamespace = "")
        java.util.List<client.stub.Goods> removedGoodsList,
        @WebParam(name = "provisionningWarehouse", targetNamespace = "")
        client.stub.Warehouse provisionningWarehouse
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getListedWarehouseNearlyOutOfStockGoods", targetNamespace = "http://services/", className = "client.stub.GetListedWarehouseNearlyOutOfStockGoods")
    @WebMethod
    @ResponseWrapper(localName = "getListedWarehouseNearlyOutOfStockGoodsResponse", targetNamespace = "http://services/", className = "client.stub.GetListedWarehouseNearlyOutOfStockGoodsResponse")
    public java.lang.String getListedWarehouseNearlyOutOfStockGoods(
        @WebParam(name = "warehouseList", targetNamespace = "")
        java.util.List<client.stub.Warehouse> warehouseList
    );
}
