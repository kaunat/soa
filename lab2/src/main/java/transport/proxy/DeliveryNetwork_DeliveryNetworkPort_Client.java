
package transport.proxy;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.5.1
 * 2013-11-23T19:40:06.842+01:00
 * Generated source version: 2.5.1
 * 
 */
public final class DeliveryNetwork_DeliveryNetworkPort_Client {

    private static final QName SERVICE_NAME = new QName("http://Transporteur2/", "DeliveryNetworkServiceService");

    private DeliveryNetwork_DeliveryNetworkPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = DeliveryNetworkServiceService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        DeliveryNetworkServiceService ss = new DeliveryNetworkServiceService(wsdlURL, SERVICE_NAME);
        DeliveryNetwork port = ss.getDeliveryNetworkPort();  
        
        {
        System.out.println("Invoking quote...");
        transport.proxy.DeliveryPersonalRequest _quote_quoteRequest = null;
        try {
            transport.proxy.DeliveryPersonalResponse _quote__return = port.quote(_quote_quoteRequest);
            System.out.println("quote.result=" + _quote__return);

        } catch (DeliveryFault_Exception e) { 
            System.out.println("Expected exception: DeliveryFault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking delivery...");
        transport.proxy.DeliveryPersonalRequest _delivery_deliveryRequest = null;
        try {
            transport.proxy.DeliveryPersonalResponse _delivery__return = port.delivery(_delivery_deliveryRequest);
            System.out.println("delivery.result=" + _delivery__return);

        } catch (DeliveryFault_Exception e) { 
            System.out.println("Expected exception: DeliveryFault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking track...");
        transport.proxy.Track _track_parameters = null;
        java.lang.String _track_number = "";
        try {
            transport.proxy.TrackResponse _track__return = port.track(_track_parameters, _track_number);
            System.out.println("track.result=" + _track__return);

        } catch (TrackFault_Exception e) { 
            System.out.println("Expected exception: TrackFault has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
